 ------
 Aether adapter for Maven plugins
 ------
 Yegor Bugayenko
 ------
 2012-05-13
 ------

~~
~~ Copyright (c) 2012-2013, JCabi.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the jcabi.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

Aether adapter for Maven plugins

  {{{https://docs.eclipse.org/display/AETHER/Home}Aether}} is a dependency
  management toolkit for Maven repositories. It is very convenient to use Aether
  in your Maven plugins, when it's necessary to find a location of certain
  artifact or find out what transitive dependencies it contains. This <<<jcabi-aether>>>
  module contains
  {{{./apidocs-${project.version}/com/jcabi/aether/Aether.html}<<<Aether>>>}}
  class, an adapter between your plugin and Aether.

  This is how you find out the location of a <<<junit:junit-dep:4.10>>> artifact:

+--
import com.jcabi.aether.Aether;
import java.io.File;
import org.apache.maven.plugin.AbstractMojo;
import org.eclipse.aether.RepositorySystemSession;
import org.eclipse.aether.artifact.Artifact;
import org.eclipse.aether.util.artifact.DefaultArtifact;
import org.eclipse.aether.util.artifact.JavaScopes;

public class MyMojo extends AbstractMojo {
  /**
   * @parameter default-value="${repositorySystemSession}"
   * @readonly
   */
  private RepositorySystemSession session;
  @Override
  public void execute() {
    File repo = this.session.getLocalRepository().getBasedir();
    Collection<Artifact> deps = new Aether(this.getProject(), repo).resolve(
      new DefaultArtifact("junit", "junit-dep", "", "jar", "4.10"),
      JavaScopes.COMPILE
    );
    // Now you have a full set of artifacts that include junit-dep.jar
    // and all its dependencies in "runtime" scope. The first
    // element in the collection is junit-dep.jar itself. You can use
    // Artifact#getFile() method to get its absolute path
  }
}
+--

  Otherwise, if you're outside of Maven infrastructure:

+--
import com.jcabi.aether.Aether;
import java.io.File;
import java.util.Arrays;
import org.apache.maven.project.MavenProject;
import org.eclipse.aether.artifact.Artifact;
import org.eclipse.aether.repository.RemoteRepository;
import org.eclipse.aether.util.artifact.DefaultArtifact;

public class Main {
  public static void main(String[] args) {
    File local = new File("/tmp/local-repository");
    Collection<RemoteRepository> remotes = Arrays.asList(
      new RemoteRepository(
        "maven-central",
        "default",
        "http://repo1.maven.org/maven2/"
      )
    );
    Collection<Artifact> deps = new Aether(remotes, local).resolve(
      new DefaultArtifact("junit", "junit-dep", "", "jar", "4.10"),
      "runtime"
    );
  }
}
+--

  More examples you can find in
  {{{https://github.com/yegor256/jcabi/blob/master/jcabi-aether/src/test/java/com/jcabi/aether/AetherTest.java}<<<AetherTest>>>}}.

  {{{./apidocs-${project.version}/com/jcabi/aether/Classpath.html}<<<Classpath>>>}}
  can help you to collect and filter dependencies in a Maven project.

  The only dependency you need
  (you can also download
  {{{http://repo1.maven.org/maven2/com/jcabi/jcabi-aether/${project.version}/jcabi-aether-${project.version}.jar}<<<jcabi-aether-${project.version}.jar>>>}}
  and add it to the classpath):

+--
<dependency>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
</dependency>
+--

* Cutting Edge Version

  If you want to use current version of the product, you can do it with
  this configuration in your <<<pom.xml>>>:

+--
<repositories>
  <repository>
    <id>oss.sonatype.org</id>
    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
  </repository>
</repositories>
<dependencies>
  <dependency>
    <groupId>com.jcabi</groupId>
    <artifactId>jcabi-aether</artifactId>
    <version>1.0-SNAPSHOT</version>
  </dependency>
</dependencies>
+--
